diff -Naurb orig//data/fileio/MatrixFile.cpp new//data/fileio/MatrixFile.cpp
--- orig//data/fileio/MatrixFile.cpp	2010-05-05 18:29:10.000000000 +0200
+++ new//data/fileio/MatrixFile.cpp	2010-06-14 20:53:36.111054000 +0200
@@ -196,7 +196,10 @@
 {
     Profiler profiler("MatrixFile::initialise", true);
 
-    assert(m_mode == WriteOnly);
+    if (m_mode != WriteOnly) {
+        fprintf(stderr, "Assertion failed: m_mode != WriteOnly\n");
+        abort();
+    }
 
     m_setColumns = new ResizeableBitset(m_width);
     
@@ -265,7 +268,10 @@
 void
 MatrixFile::getColumnAt(size_t x, void *data)
 {
-    assert(m_mode == ReadOnly);
+    if (m_mode != ReadOnly) {
+        fprintf(stderr, "Assertion failed: m_mode != ReadOnly\n");
+        abort();
+    }
     
 #ifdef DEBUG_MATRIX_FILE_READ_SET
     std::cerr << "MatrixFile[" << m_fd << "]::getColumnAt(" << x << ")" << std::endl;
@@ -340,7 +346,10 @@
 void
 MatrixFile::setColumnAt(size_t x, const void *data)
 {
-    assert(m_mode == WriteOnly);
+    if (m_mode != WriteOnly) {
+        fprintf(stderr, "Assertion failed: m_mode != WriteOnly\n");
+        abort();
+    }
     if (m_fd < 0) return; // closed
 
 #ifdef DEBUG_MATRIX_FILE_READ_SET
diff -Naurb orig//data/model/EditableDenseThreeDimensionalModel.cpp new//data/model/EditableDenseThreeDimensionalModel.cpp
--- orig//data/model/EditableDenseThreeDimensionalModel.cpp	2010-05-05 18:29:09.000000000 +0200
+++ new//data/model/EditableDenseThreeDimensionalModel.cpp	2010-06-14 20:56:10.406871000 +0200
@@ -175,7 +175,10 @@
 EditableDenseThreeDimensionalModel::truncateAndStore(size_t index,
                                                      const Column &values)
 {
-    assert(index < m_data.size());
+    if (index >= m_data.size()) {
+        fprintf(stderr, "Assertion failed: index >= m_data.size()\n");
+        abort();
+    }
 
     //std::cout << "truncateAndStore(" << index << ", " << values.size() << ")" << std::endl;
 
@@ -287,7 +290,10 @@
 {
     // See comment above m_trunc declaration in header
 
-    assert(index < m_data.size());
+    if (index >= m_data.size()) {
+        fprintf(stderr, "Assertion failed: index >= m_data.size()\n");
+        abort();
+    }
     Column c = m_data.at(index);
     if (index == 0) {
         return c;
diff -Naurb orig//data/model/FFTModel.cpp new//data/model/FFTModel.cpp
--- orig//data/model/FFTModel.cpp	2010-05-05 18:29:09.000000000 +0200
+++ new//data/model/FFTModel.cpp	2010-06-14 20:57:53.683528000 +0200
@@ -65,7 +65,10 @@
                       << windowIncrement << " / "
                       << m_server->getWindowIncrement()
                       << " must be a power of two" << std::endl;
-            assert(!(xratio & 0x1));
+            if (xratio & 0x1) {
+                fprintf(stderr, "Assertion failed: xratio & 0x1\n");
+                abort();
+            }
         }
         ++m_xshift;
         xratio >>= 1;
@@ -76,7 +79,10 @@
             std::cerr << "ERROR: FFTModel: FFT size ratio "
                       << m_server->getFFTSize() << " / " << fftSize
                       << " must be a power of two" << std::endl;
-            assert(!(yratio & 0x1));
+            if (yratio & 0x1) {
+                fprintf(stderr, "Assertion failed: yratio & 0x1\n");
+                abort();
+            }
         }
         ++m_yshift;
         yratio >>= 1;
diff -Naurb orig//data/model/WritableWaveFileModel.cpp new//data/model/WritableWaveFileModel.cpp
--- orig//data/model/WritableWaveFileModel.cpp	2010-05-05 18:29:09.000000000 +0200
+++ new//data/model/WritableWaveFileModel.cpp	2010-06-14 21:20:27.500059241 +0200
@@ -168,7 +168,8 @@
 Model *
 WritableWaveFileModel::clone() const
 {
-    assert(0); //!!!
+    fprintf(stderr, "Assertion failed.\n");
+    abort(); //!!!
     return 0;
 }
 
